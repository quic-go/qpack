on: [ push, pull_request ]

jobs:
  unit:
    strategy:
      matrix:
        go: [ "1.18.x", "1.19.x" ]
    runs-on: ubuntu-latest
    name: Unit tests (Go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with: 
          go-version: ${{ matrix.go }}
      - run: go version
      - name: Install dependencies
        run: go build
      - name: Run tests
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -cover -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Run tests (32 bit)
        env:
          GOARCH: 386
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -cover -coverprofile coverage.txt -output-dir . -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Run tests with race detector
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -race -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          env_vars: GO=${{ matrix.go }}
  integration:
    strategy:
      matrix:
        go: [ "1.18.x", "1.19.x" ]
    runs-on: ubuntu-latest
    name: Integration tests (Go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with: 
          go-version: ${{ matrix.go }}
      - run: go version
      - name: Install dependencies
        run: go build
      - name: Run tests
        run: |
          for i in {1..25}; do
            go run github.com/onsi/ginkgo/v2/ginkgo -race -v -randomize-all -trace integrationtests/self;
          done

